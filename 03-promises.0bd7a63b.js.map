{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAC/BC,iBAAiB,UAItB,SAAkBC,GAChBA,EAAIC,iBACUD,EAAIE,cAAcC,MAAMC,MACzBJ,EAAIE,cAAcG,KAAKD,MACpBJ,EAAIE,cAAcI,OAAOF,K,UAUzCG,YAAW,KACLC,UACFC,QAAQ,6CAERC,OAAO,yCAAyC,GAEjD,MAOFC,MAAK,EAACC,SAAEA,EAAQT,MAAEA,MACjBU,EAAAlB,GAASmB,OAAOC,QAAQ,uBAAqBH,QAAiBT,MAAU,IAEzEa,OAAM,EAACJ,SAAEA,EAAQT,MAAEA,MACpBU,EAAAlB,GAASmB,OAAOG,QAAQ,sBAAoBL,QAAeT,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// console.log(Notiflix)\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit);\n\n// console.log(form)\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delay = evt.currentTarget.delay.value;\n  const step = evt.currentTarget.step.value;\n   const amount = evt.currentTarget.amount.value;\n\n\n}\n\n\n\n\nfunction createPromise(position, delay) {\n\n  setTimeout(() => {\n    if (isSuccess) {\n      resolve(\"Success! Value passed to resolve function\");\n    } else {\n      reject(\"Error! Error passed to reject function\");\n    }\n  }, 2000);\n};\n\n\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","currentTarget","delay","value","step","amount","setTimeout","isSuccess","resolve","reject","then","position","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.0bd7a63b.js.map"}